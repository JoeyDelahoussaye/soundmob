{"version":3,"sources":["webpack:///./src/app/services/sound-board.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,yGAA2C;AAC3C,uGAAsC;AACtC,wFAAkC;AAIlC,IAAa,iBAAiB,GAA9B;IAEE;QADQ,WAAM,GAAG,EAAE,CAAC,qBAAqB,EAAE,EAAE,UAAU,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC;IACzD,CAAC;IACjB,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAC,KAAK,CAAC,CAAC;IAEtC,CAAC;IACD,YAAY;QAER,IAAI,UAAU,GAAG,IAAI,iBAAU,CAAmB,QAAQ,CAAC,EAAE;YAC3D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE;gBACpC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACtB,CAAC;CACF;AAhBY,iBAAiB;IAH7B,iBAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;;GACW,iBAAiB,CAgB7B;AAhBY,8CAAiB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client'\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoundBoardService {\n  private socket = io('ws://localhost:3000', { transports: ['websocket'] })\n  constructor() { }\n  soundEmit(sound) {\n    this.socket.emit('soundEmit',sound);\n   \n  }\n  soundReceive() {\n  \n      let observable = new Observable<{ sound: string}>(observer => {\n        this.socket.on('soundRelay', (data) => {\n          observer.next(data);\n        });\n      });\n      return observable;\n  }\n}\n"],"sourceRoot":""}