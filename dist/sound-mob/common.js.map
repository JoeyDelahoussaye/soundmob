{"version":3,"sources":["webpack:///./src/app/tokbox/publisher/publisher.component.css","webpack:///./src/app/tokbox/publisher/publisher.component.html","webpack:///./src/app/tokbox/publisher/publisher.component.ts","webpack:///./src/app/tokbox/subscriber/subscriber.component.css","webpack:///./src/app/tokbox/subscriber/subscriber.component.html","webpack:///./src/app/tokbox/subscriber/subscriber.component.ts","webpack:///./src/app/tokbox/tokbox.component.css","webpack:///./src/app/tokbox/tokbox.component.html","webpack:///./src/app/tokbox/tokbox.component.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div [ngClass]=\\\"{'publishing': publishing}\\\" #publisherDiv></div>\\n\"","import { Component, ElementRef, AfterViewInit, ViewChild, Input } from '@angular/core';\nimport { OpentokService } from '../../opentok.service';\n\nconst publish = () => {\n\n};\n\n@Component({\n  selector: 'app-publisher',\n  templateUrl: './publisher.component.html',\n  styleUrls: ['./publisher.component.css']\n})\n\nexport class PublisherComponent implements AfterViewInit {\n  @ViewChild('publisherDiv') publisherDiv: ElementRef;\n  @Input() session: OT.Session;\n  publisher: OT.Publisher;\n  publishing: Boolean;\n\n  constructor(private opentokService: OpentokService) {\n    this.publishing = false;\n  }\n\n  ngAfterViewInit() {\n    const OT = this.opentokService.getOT();\n    this.publisher = OT.initPublisher(this.publisherDiv.nativeElement, { insertMode: 'append' });\n\n    if (this.session) {\n      if (this.session['isConnected']()) {\n        this.publish();\n      }\n      this.session.on('sessionConnected', () => this.publish());\n    }\n  }\n\n  publish() {\n    this.session.publish(this.publisher, (err) => {\n      if (err) {\n        alert(err.message);\n      } else {\n        this.publishing = true;\n      }\n    });\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div [ngClass]=\\\"{'publishing': publishing}\\\" #publisherDiv></div>\"","import { Component, ElementRef, AfterViewInit, ViewChild, Input } from '@angular/core';\nimport * as OT from '@opentok/client';\n\n@Component({\n  selector: 'app-subscriber',\n  templateUrl: './subscriber.component.html',\n  styleUrls: ['./subscriber.component.css']\n})\nexport class SubscriberComponent implements AfterViewInit {\n  @ViewChild('subscriberDiv') subscriberDiv: ElementRef;\n  @Input() session: OT.Session;\n  @Input() stream: OT.Stream;\n\n  constructor() { }\n\n  ngAfterViewInit() {\n    const subscriber = this.session.subscribe(this.stream, this.subscriberDiv.nativeElement, {}, (err) => {\n      if (err) {\n        alert(err.message);\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1>\\n<div *ngIf=\\\"session\\\">\\n  <app-subscriber *ngFor=\\\"let stream of streams\\\" [stream]=\\\"stream\\\" [session]=\\\"session\\\"></app-subscriber>\\n  <app-publisher [session]=\\\"session\\\"></app-publisher>\\n</div>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\n\nimport * as OT from '@opentok/client';\nimport { OpentokService } from '../opentok.service';\n\n\n@Component({\n  selector: 'app-tokbox',\n  templateUrl: './tokbox.component.html',\n  styleUrls: ['./tokbox.component.css'],\n  providers: [OpentokService]\n})\nexport class TokboxComponent implements OnInit {\n\n  title = 'coo';\n  session: OT.Session;\n  streams: Array<OT.Stream> = [];\n  changeDetectorRef: ChangeDetectorRef;\n\n  constructor(private ref: ChangeDetectorRef, private opentokService: OpentokService) { \n    this.changeDetectorRef = ref;\n  }\n\n  ngOnInit() {\n    this.opentokService.initSession().then((session: OT.Session) => {\n      this.session = session;\n      this.session.on('streamCreated', (event) => {\n        this.streams.push(event.stream);\n        this.changeDetectorRef.detectChanges();\n      });\n      this.session.on('streamDestroyed', (event) => {\n        const idx = this.streams.indexOf(event.stream);\n        if (idx > -1) {\n          this.streams.splice(idx, 1);\n          this.changeDetectorRef.detectChanges();\n        }\n      });\n    })\n      .then(() => this.opentokService.connect())\n      .catch((err) => {\n        console.error(err);\n        alert('Unable to connect. Make sure you have updated the config.ts file with your OpenTok details.');\n      });\n  }\n  }\n\n\n"],"sourceRoot":""}